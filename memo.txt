# センチネル文字のルール

（YYFILL = 0 かつ EOF が有効なルール）
は基本的に `goto loop;` で先頭に戻ったあと、一番最初の switch にセンチネル文字判定がくる
センチネル文字もだった場合は `$` なルールに goto してレキサーが終了する。


- sentinel_character.c
- sentinel_character_2.c


---------------------------------------------------------------------------


# 境界チェック付きセンチネル文字ルール


レキサーの初期状態（開始状態）に以下のチェックコードが挿入される

- YYLIMIT がバッファの末尾アドレス、YYCURSORが現在のカーソル位置
  - カーソルがバッファの末尾を超えたときに初期状態が受け付けない文字がきたかどうか
  - つまり入力がバッファ内完全に収まる場合に良いだろうか（？)

```c
default:
	// 初期状態での境界チェック
	if (YYLIMIT <= YYCURSOR) goto yyeof1;
	// 境界チェックに失敗している場合は不正な文字が来たと判断する
	goto yy2;
}
```


- sentinel_with_bound_check.c


---------------------------------------------------------------------------


# YYFILL + EOF のルール
バッファ再充填ありでEOFルールが有効な場合
これはつまり入力がバッファに収まらない可能性がある入力で終端文字があるという想定

このとき一番最初の状態のみ `goto yyeof1` があって最終状態まで行けるのは「センチネル文字」と同じだが
センチネル文字の判定が以下のようになっている。

```c
yyFillLabel0:
	yych = *in->cur;
	switch (yych) {
	case ' ':	goto yy4;
	case '\'':	goto yy7;
	default:
		/* 受諾できる文字以外のものが来た場合に yyfill チェック */
		if (in->lim <= in->cur) {
			/* yyfill が成功 = 新しい文字が充填されたので再度チェックするため戻る */
			if (fill(in) == 0) goto yyFillLabel0;
			/* 初期状態でのEOFルール適用 */
			goto yyeof1;
		}
		goto yy2;
	}
```

つまり YYFILL が呼ばれる条件（YYLIMIT）に引っかかっており、YYFILL が失敗したとき
受諾される文字が来ず、バッファ再充填がされなかったとき、レキサーを正常終了させるという動作になる。


- sentinel_with_yyfill.c


---------------------------------------------------------------------------


